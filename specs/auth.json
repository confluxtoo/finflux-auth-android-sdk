{
  "openapi": "3.0.1",
  "info": {
    "title": "Finflux",
    "description": "Finflux Authentication APIs",
    "contact": {
      "email": "develop@finflux.co"
    },
    "version": "Authentication-1.0",
    "x-logo": {
      "url": "https://www.finflux.co/img/logo-dark.png",
      "backgroundColor": "#FFFFFF",
      "altText": "Finflux logo"
    }
  },
  "servers": [
    {
      "url": "https://develop.finflux.io/fineract-provider/api",
      "description": "Demo server"
    },
    {
      "url": "http://{domain}/fineract-provider/api",
      "description": "Custom server",
      "variables": {
        "domain": {
          "description": "domain with the port",
          "default": "yourdomain"
        },
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "https"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Finflux uses OAuth2 (https://oauth.net/2/) for Authentication."
    }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Fetch Access Token",
        "description": "Fetch Access Token using User-Password or Refresh Token",
        "operationId": "fetch Access Token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserPasswordPayload"
                  },
                  {
                    "$ref": "#/components/schemas/RefreshTokenPayload"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGlobalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cryptography/login/generatepublickey": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate Public Key",
        "description": "Generate Public Key",
        "operationId": "generatePublicKey",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "conflux"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGlobalErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RefreshTokenPayload": {
        "required": [
          "client_id",
          "grant_type",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client-Id provided by finflux",
            "example": "community-app",
            "maxLength": 50
          },
          "grant_type": {
            "type": "string",
            "example": "refresh_token",
            "default": "refresh_token"
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token that is generated at the time of token generation",
            "example": "2a082726-ba51-41bb-bcea-52bb7ebab08c",
            "maxLength": 50
          }
        },
        "description": "To fetch a access token by refresh token"
      },
      "UserPasswordPayload": {
        "required": [
          "client_id",
          "grant_type",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client-Id provided by finflux",
            "example": "community-app",
            "maxLength": 50
          },
          "grant_type": {
            "type": "string",
            "example": "password",
            "default": "password"
          },
          "password": {
            "type": "string",
            "description": "Encrypted password if isPasswordEncrypted is true",
            "example": "k9zY/wefewrGdkla889dKDODJiwkkewdexfnhkehfl656frkyuyiui",
            "maxLength": 128
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "conflux",
            "maxLength": 50
          },
          "isPasswordEncrypted": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "To fetch a access token by refresh token"
      },
      "ApiErrorMessageArg": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          }
        }
      },
      "ApiParameterError": {
        "type": "object",
        "properties": {
          "developerMessage": {
            "type": "string",
            "maxLength": 128
          },
          "defaultUserMessage": {
            "type": "string",
            "maxLength": 128
          },
          "userMessageGlobalisationCode": {
            "type": "string",
            "maxLength": 128
          },
          "parameterName": {
            "type": "string",
            "maxLength": 128
          },
          "value": {
            "type": "object"
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiErrorMessageArg"
            }
          }
        }
      },
      "ApiGlobalErrorResponse": {
        "type": "object",
        "properties": {
          "developerMessage": {
            "type": "string",
            "maxLength": 128
          },
          "httpStatusCode": {
            "type": "string",
            "maxLength": 128
          },
          "defaultUserMessage": {
            "type": "string",
            "maxLength": 128
          },
          "userMessageGlobalisationCode": {
            "type": "string",
            "maxLength": 128
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiParameterError"
            }
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AccessTokenResponse": {
        "title": "AccessTokenResponse",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "bed23891-82ba-4641-899c-b53c38f67763",
            "maxLength": 50,
            "minLength": 10
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "refresh_token": {
            "type": "string",
            "example": "2a082726-ba51-41bb-bcea-52bb7ebab08c",
            "maxLength": 50,
            "minLength": 10
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 3599
          },
          "scope": {
            "type": "string",
            "example": "all"
          }
        }
      },
      "PublicKeyResponse": {
        "title": "PublicKeyResponse",
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "example": "1"
          },
          "keyType": {
            "type": "string",
            "example": "1"
          },
          "keyValue": {
            "type": "string",
            "example": "MIIIBIJANjiosdjicfksjflksjfklsjdfklsdjkljflkssdlkfsdkjfkl"
          },
          "userId": {
            "type": "string",
            "example": "conflux"
          }
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Authentication APIs",
      "tags": [
        "Authentication"
      ]
    }
  ]
}
{"mode":"full","isActive":false}